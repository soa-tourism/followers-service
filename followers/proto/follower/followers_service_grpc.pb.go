// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.27.0--rc2
// source: followers_service.proto

package follower

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// SocialProfileClient is the client API for SocialProfile service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SocialProfileClient interface {
	GetSocialProfile(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*SocialProfileResponse, error)
	GetFollowers(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*SocialProfilesResponse, error)
	GetFollowing(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*SocialProfilesResponse, error)
	GetRecommended(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*SocialProfilesResponse, error)
	Follow(ctx context.Context, in *FollowRequest, opts ...grpc.CallOption) (*SocialProfilesResponse, error)
	Unfollow(ctx context.Context, in *UnfollowRequest, opts ...grpc.CallOption) (*SocialProfilesResponse, error)
	Search(ctx context.Context, in *Username, opts ...grpc.CallOption) (*SocialProfilesResponse, error)
	CreateSocialProfile(ctx context.Context, in *SocialProfileRequest, opts ...grpc.CallOption) (*SocialProfileResponse, error)
}

type socialProfileClient struct {
	cc grpc.ClientConnInterface
}

func NewSocialProfileClient(cc grpc.ClientConnInterface) SocialProfileClient {
	return &socialProfileClient{cc}
}

func (c *socialProfileClient) GetSocialProfile(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*SocialProfileResponse, error) {
	out := new(SocialProfileResponse)
	err := c.cc.Invoke(ctx, "/SocialProfile/GetSocialProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *socialProfileClient) GetFollowers(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*SocialProfilesResponse, error) {
	out := new(SocialProfilesResponse)
	err := c.cc.Invoke(ctx, "/SocialProfile/GetFollowers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *socialProfileClient) GetFollowing(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*SocialProfilesResponse, error) {
	out := new(SocialProfilesResponse)
	err := c.cc.Invoke(ctx, "/SocialProfile/GetFollowing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *socialProfileClient) GetRecommended(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*SocialProfilesResponse, error) {
	out := new(SocialProfilesResponse)
	err := c.cc.Invoke(ctx, "/SocialProfile/GetRecommended", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *socialProfileClient) Follow(ctx context.Context, in *FollowRequest, opts ...grpc.CallOption) (*SocialProfilesResponse, error) {
	out := new(SocialProfilesResponse)
	err := c.cc.Invoke(ctx, "/SocialProfile/Follow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *socialProfileClient) Unfollow(ctx context.Context, in *UnfollowRequest, opts ...grpc.CallOption) (*SocialProfilesResponse, error) {
	out := new(SocialProfilesResponse)
	err := c.cc.Invoke(ctx, "/SocialProfile/Unfollow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *socialProfileClient) Search(ctx context.Context, in *Username, opts ...grpc.CallOption) (*SocialProfilesResponse, error) {
	out := new(SocialProfilesResponse)
	err := c.cc.Invoke(ctx, "/SocialProfile/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *socialProfileClient) CreateSocialProfile(ctx context.Context, in *SocialProfileRequest, opts ...grpc.CallOption) (*SocialProfileResponse, error) {
	out := new(SocialProfileResponse)
	err := c.cc.Invoke(ctx, "/SocialProfile/CreateSocialProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SocialProfileServer is the server API for SocialProfile service.
// All implementations must embed UnimplementedSocialProfileServer
// for forward compatibility
type SocialProfileServer interface {
	GetSocialProfile(context.Context, *UserId) (*SocialProfileResponse, error)
	GetFollowers(context.Context, *UserId) (*SocialProfilesResponse, error)
	GetFollowing(context.Context, *UserId) (*SocialProfilesResponse, error)
	GetRecommended(context.Context, *UserId) (*SocialProfilesResponse, error)
	Follow(context.Context, *FollowRequest) (*SocialProfilesResponse, error)
	Unfollow(context.Context, *UnfollowRequest) (*SocialProfilesResponse, error)
	Search(context.Context, *Username) (*SocialProfilesResponse, error)
	CreateSocialProfile(context.Context, *SocialProfileRequest) (*SocialProfileResponse, error)
	mustEmbedUnimplementedSocialProfileServer()
}

// UnimplementedSocialProfileServer must be embedded to have forward compatible implementations.
type UnimplementedSocialProfileServer struct {
}

func (UnimplementedSocialProfileServer) GetSocialProfile(context.Context, *UserId) (*SocialProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSocialProfile not implemented")
}
func (UnimplementedSocialProfileServer) GetFollowers(context.Context, *UserId) (*SocialProfilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFollowers not implemented")
}
func (UnimplementedSocialProfileServer) GetFollowing(context.Context, *UserId) (*SocialProfilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFollowing not implemented")
}
func (UnimplementedSocialProfileServer) GetRecommended(context.Context, *UserId) (*SocialProfilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecommended not implemented")
}
func (UnimplementedSocialProfileServer) Follow(context.Context, *FollowRequest) (*SocialProfilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Follow not implemented")
}
func (UnimplementedSocialProfileServer) Unfollow(context.Context, *UnfollowRequest) (*SocialProfilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unfollow not implemented")
}
func (UnimplementedSocialProfileServer) Search(context.Context, *Username) (*SocialProfilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (UnimplementedSocialProfileServer) CreateSocialProfile(context.Context, *SocialProfileRequest) (*SocialProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSocialProfile not implemented")
}
func (UnimplementedSocialProfileServer) mustEmbedUnimplementedSocialProfileServer() {}

// UnsafeSocialProfileServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SocialProfileServer will
// result in compilation errors.
type UnsafeSocialProfileServer interface {
	mustEmbedUnimplementedSocialProfileServer()
}

func RegisterSocialProfileServer(s grpc.ServiceRegistrar, srv SocialProfileServer) {
	s.RegisterService(&SocialProfile_ServiceDesc, srv)
}

func _SocialProfile_GetSocialProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialProfileServer).GetSocialProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SocialProfile/GetSocialProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialProfileServer).GetSocialProfile(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SocialProfile_GetFollowers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialProfileServer).GetFollowers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SocialProfile/GetFollowers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialProfileServer).GetFollowers(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SocialProfile_GetFollowing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialProfileServer).GetFollowing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SocialProfile/GetFollowing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialProfileServer).GetFollowing(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SocialProfile_GetRecommended_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialProfileServer).GetRecommended(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SocialProfile/GetRecommended",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialProfileServer).GetRecommended(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SocialProfile_Follow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialProfileServer).Follow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SocialProfile/Follow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialProfileServer).Follow(ctx, req.(*FollowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SocialProfile_Unfollow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnfollowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialProfileServer).Unfollow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SocialProfile/Unfollow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialProfileServer).Unfollow(ctx, req.(*UnfollowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SocialProfile_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Username)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialProfileServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SocialProfile/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialProfileServer).Search(ctx, req.(*Username))
	}
	return interceptor(ctx, in, info, handler)
}

func _SocialProfile_CreateSocialProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SocialProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialProfileServer).CreateSocialProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SocialProfile/CreateSocialProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialProfileServer).CreateSocialProfile(ctx, req.(*SocialProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SocialProfile_ServiceDesc is the grpc.ServiceDesc for SocialProfile service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SocialProfile_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "SocialProfile",
	HandlerType: (*SocialProfileServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSocialProfile",
			Handler:    _SocialProfile_GetSocialProfile_Handler,
		},
		{
			MethodName: "GetFollowers",
			Handler:    _SocialProfile_GetFollowers_Handler,
		},
		{
			MethodName: "GetFollowing",
			Handler:    _SocialProfile_GetFollowing_Handler,
		},
		{
			MethodName: "GetRecommended",
			Handler:    _SocialProfile_GetRecommended_Handler,
		},
		{
			MethodName: "Follow",
			Handler:    _SocialProfile_Follow_Handler,
		},
		{
			MethodName: "Unfollow",
			Handler:    _SocialProfile_Unfollow_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _SocialProfile_Search_Handler,
		},
		{
			MethodName: "CreateSocialProfile",
			Handler:    _SocialProfile_CreateSocialProfile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "followers_service.proto",
}
